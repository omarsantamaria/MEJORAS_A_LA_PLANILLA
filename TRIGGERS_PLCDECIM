USE [OutSourcing]
GO

/****** Object:  Trigger [tr_del_plcdecim]    Script Date: 12/17/2015 14:17:15 ******/
IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[tr_del_plcdecim]'))
DROP TRIGGER [dbo].[tr_del_plcdecim]
GO

/****** Object:  Trigger [tr_ins_plcdecim]    Script Date: 12/17/2015 14:17:15 ******/
IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'[dbo].[tr_ins_plcdecim]'))
DROP TRIGGER [dbo].[tr_ins_plcdecim]
GO

USE [OutSourcing]
GO

/****** Object:  Trigger [dbo].[tr_del_plcdecim]    Script Date: 12/17/2015 14:17:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


  CREATE  TRIGGER [dbo].[tr_del_plcdecim]
  ON [dbo].[plcdecim]
  FOR DELETE
  AS
 /****************************************************
 PROPOSITO:  
 Eliminar   el registro de planilla ciere en el HISTORICO_NUEVO 
 *****************************************************/
 set nocount on
/*
NO HA PROBADO
elimianr la linera del return para hacer pruebas
*/  	 
return
	delete HISTORICO_NUEVO from  deleted t 
where    HISTORICO_NUEVO.flag = 1
and t.deci_g_financiero  = HISTORICO_NUEVO.grupo_financiero
and t.deci_empresa       = HISTORICO_NUEVO.empresa
and t.deci_empleado      = HISTORICO_NUEVO.empleado
and t.deci_tipo_planilla = HISTORICO_NUEVO.tipo_planilla
and t.deci_concepto_apli = HISTORICO_NUEVO.concepto
and t.deci_fecha_hasta   = HISTORICO_NUEVO.fecha_hasta
and t.deci_desc_partida  = HISTORICO_NUEVO.tipo_planilla --revisar


 



GO

/****** Object:  Trigger [dbo].[tr_ins_plcdecim]    Script Date: 12/17/2015 14:17:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

  CREATE TRIGGER [dbo].[tr_ins_plcdecim]
  ON [dbo].[plcdecim]
  FOR INSERT
  AS
 /****************************************************
 PROPOSITO:  
 Crear   el registro de planilla actual en el HISTORICO_NUEVO 
 *****************************************************/
 
/*
NO HA PROBADO
elimianr la linera del return para hacer pruebas
*/  	 
return
 
  DECLARE @LINEA numeric(18,0)=0  
 
 SELECT @LINEA =    MAX(linea) from historico_nuevo 
  
 insert into HISTORICO_NUEVO
 SELECT  
 plcdecim.deci_g_financiero  as grupo_financiero,
 plcdecim.deci_empresa       as empresa, 
 plcdecim.deci_empleado      as empleado,
 plcdecim.deci_tipo_planilla as tipo_planilla,
 '0'                         as tipo_cierre,  --plcdecim.deci_origen
 '0'        as origen,
  
 @LINEA + ROW_NUMBER() OVER(ORDER BY plcdecim.deci_empleado DESC)  as linea,  --plcdecim.deci_linea
         isnull(empl_nombre1,'') + ' ' + isnull(empl_nombre2,'') + ' ' + isnull(empl_apellido_paterno,'') + ' ' + isnull(empl_apellido_materno,'')  as nombre,   
         plcdecim.deci_concepto_apli         as concepto,   --plcdecim.deci_concepto
         placopag.copa_descripcion     as descripcion_concepto,   
         0 as horas_trabajadas,   --plcdecim.deci_horas_ordinarias   select * from plcdecim  sp_helptext spInsSalariosPlanillaActual 65
         plcdecim.deci_monto_bruto   as monto_bruto,
         0                           as monto_descontado,  --revisar
         plcdecim.deci_monto_bruto   as monto_bruto_pagar, --revisar
         plcdecim.deci_imp_renta     as imprenta, --revisar segeducativo
         plcdecim.deci_seguro_educativo     as segeducativo, --revisar 
         plcdecim.deci_seguro_social     as segsocial, --revisar
          0   as acreedores,    --revisar
         plcdecim.deci_mto_neto     as Neto,    
        --case when deci_concepto = 1 then deci_mto_ordinario - isnull( ( SELECT sum( pc102.deci_monto_bruto  )
   -- FROM plcdecim pc102 
   --WHERE ( pc102.deci_g_financiero = plmemple.empl_g_financiero ) and  
   --      ( pc102.deci_empresa = plmemple.empl_empresa ) and  
   --      ( pc102.deci_empleado = plmemple.empl_empleado ) and  
   --      ( pc102.deci_concepto_apli = 102 ) ),0)   else ( case when deci_concepto = 102 then deci_monto_bruto else deci_monto_bruto end) end as monto_bruto,   
         --case when deci_concepto_apli = 1 then - isnull( deci_sueldo_base_descontado,0) else 0  end as monto_descontado ,
   --      case when deci_concepto_apli = 1 then deci_mto_ordinario  - isnull( ( SELECT sum( pc102.deci_monto_bruto  )
   -- FROM plcdecim pc102 
   --WHERE ( pc102.deci_g_financiero = plmemple.empl_g_financiero ) and  
   --      ( pc102.deci_empresa = plmemple.empl_empresa ) and  
   --      ( pc102.deci_empleado = plmemple.empl_empleado ) and  
   --      ( pc102.deci_concepto = 102 ) ),0)    - isnull( deci_sueldo_base_descontado,0) else ( case when deci_concepto = 102 then deci_monto_bruto else deci_monto_bruto end)   end as monto_bruto_pagar,   
         --case when deci_concepto = 1 then -  deci_imp_renta    else  0 end as imprenta,   
         --case when deci_concepto = 1 then - deci_seguro_educa  else  0 end as segeducativo,   
         --case when deci_concepto = 1 then - deci_seguro_social else  0 end as segsocial,   
         --case when deci_concepto = 1 then - deci_otras_deducc  else  0 end as acreedores,   
         --case when deci_concepto = 1 then  deci_monto_neto     else  0 end as Neto,   

         plcdecim.deci_fecha_desde as fecha_desde,   
         plcdecim.deci_fecha_hasta as fecha_hasta,   

         plaestad.esta_estado        as estado,   
         plaestad.esta_descripcion   as descripcion_estado,   
         plmemple.empl_salario       as salario_mensual,   
         plmemple.empl_rata_hora     as rata_por_hora,   
         plmemple.empl_jornada       as jornada_semanal,   
         plmemple.empl_horas_diarias as horas_por_dia 
         ,'0' as FLAG
    FROM inserted plcdecim,
         --plcdecim,   
         placopag,   
         plmemple,   
         plaestad  
   WHERE ( plcdecim.deci_g_financiero = placopag.copa_g_financiero ) and  
         ( plcdecim.deci_empresa = placopag.copa_empresa ) and  
         ( plcdecim.deci_concepto_apli = placopag.copa_concepto_pago ) and  
         ( plcdecim.deci_tipo_planilla = plmemple.empl_tipo_planilla ) and  
         ( plcdecim.deci_empresa = plmemple.empl_empresa ) and  
         ( plcdecim.deci_empleado = plmemple.empl_empleado ) and  
         ( plmemple.empl_estado = plaestad.esta_estado ) and  
         ( --( plcdecim.deci_linea = @linea  ) AND  
         ( plmemple.empl_estado not in ('2','4') ) )   
ORDER BY plcdecim.deci_g_financiero ASC,   
         plcdecim.deci_empresa ASC,   
         plcdecim.deci_empleado ASC,   
         plcdecim.deci_concepto_apli ASC
 

 


GO


